input {
#    file {
#        path => ["/usr/share/logstash/logs/api.log"]
#        sincedb_path => "/dev/null"
#        start_position => "beginning"
#        tags => ["api"]
#    }
}

filter {
    if "api" in [tags] or "api" in [tag] {
        grok {
            id => "api.filter.grok"
            patterns_dir => ["/etc/logstash/conf.d/patterns"]
            patterns_files_glob => ["**/{global,api}-patterns"]
            match => {
                "message" => "%{API_PATTERN}"
            }
        }
        mutate {
            id => "api.filter.mutate1"
            gsub => [ "errormessage", "[\\]", "" ]
        }
        mutate {
            id => "api.filter.mutate2"
            add_field => {
                "[memory_usage][usage]" => "%{memory}"
                "[memory_usage][peak]" => "%{memory_peak}"
            }
            remove_field => ["memory", "memory_peak"]
        }
        mutate {
            id => "api.filter.mutate3"
            convert => {
                "response" => "integer"
                "[memory_usage][usage]" => "integer"
                "[memory_usage][peak]" => "integer"
            }
        }
        json {
            id => "api.filter.json1"
            source => "rawresponse"
            target => "jsonresponse"
        }
        json {
            id => "api.filter.json2"
            source => "errormessage"
            target => "jsonerrormessage"
        }
        mutate {
            id => "api.filter.mutate4"
            remove_field => ["rawresponse", "errormessage", "port"]
        }
        #if "_grokparsefailure" in [tags] and ![category] {
        #    drop {}
        #}
        #mutate {
        #    id => "apache.filter.mutate5"
        #    remove_field => ["tags"]
        #}
    }

}

output {
    if "api" in [tags] or "api" in [tag] {
        #stdout {
        #    codec => rubydebug
        #}
        elasticsearch {
            hosts => ["http://elasticsearch:9200"]
            index => "api-%{+YYYY.MM.dd}"
        }
    }
}