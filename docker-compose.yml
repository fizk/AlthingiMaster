version: '3.4'

services:

  master:
    container_name: master
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - 80:80
    volumes:
      - ./static:/usr/local/apache2/htdocs
    depends_on:
      - graphql
      - image-server
      - logstash
    links:
      - graphql
      - logstash
    logging:
      driver: gelf
      options:
        gelf-address: udp://127.0.0.1:12201
        tag: "apache"

  api:
    container_name: api
    build:
      args:
        - WITH_XDEBUG=false
        - WITH_DEV=false
      context: ./server
      dockerfile: Dockerfile
    volumes:
      - ./server/auto/:/var/www/auto
      - ./server/config/:/var/www/config
      - ./server/module/:/var/www/module
      - ./server/public/:/var/www/public
    depends_on:
      - database
      - search-api
      - cache-api
      - queue
      - accumulator
      - acc-database
    links:
      - database
      - search-api
      - cache-api
      - queue
      - accumulator
      - acc-database
    expose:
      - 80
    environment:
      - APPLICATION_ENVIRONMENT=development
      - DB_HOST=database
      - DB_PORT=3306
      - DB_NAME=althingi
      - DB_USER=root
      - DB_PASSWORD=example

      - CACHE_HOST=cache-api
      - CACHE_PORT=6379
      - CACHE_TYPE=memory #none#

      - SEARCH=elasticsearch #none#

      - ES_HOST=search-api
      - ES_PROTO=http
      - ES_PORT=9200
      - ES_USER=elastic
      - ES_PASSWORD=changeme

      - LOG_PATH=php://stdout

      - QUEUE=RabbitMQ #none#
      - QUEUE_HOST=queue
      - QUEUE_PORT=5672
      - QUEUE_USER=admin
      - QUEUE_PASSWORD=Admin@123
      - QUEUE_VHOST=/
      - QUEUE_FORCED=true

      - STORAGE_HOST=acc-database
      - STORAGE_DB=althingi
      - STORAGE_PORT=27017
      - STORAGE_USER=wo
      - STORAGE_PASSWORD=long@pass!123
    logging:
      driver: gelf
      options:
        gelf-address: udp://127.0.0.1:12201
        tag: "api"

  search-api:
    container_name: search-api
    image: docker.elastic.co/elasticsearch/elasticsearch:7.4.0
    environment:
      - discovery.type=single-node
    ports:
      - 9200:9200
      - 9300:9300
    volumes:
      - ./data/search-api/:/usr/share/elasticsearch/data
    logging:
      driver: "json-file"
      options:
        max-file: "5"
        max-size: "10m"

  database:
    container_name: database
    image: mysql:5.6.41
    restart: always
    command: --default-authentication-plugin=mysql_native_password
    ports:
      - 4406:3306
    expose:
      - 3306
    volumes:
      - ./data/mysql:/var/lib/mysql
      - ./server/auto/db/:/docker-entrypoint-initdb.d
      - ./server/assets/database/:/home
      - ./assets/database:/etc/mysql/conf.d
      - ./logs/:/var/log/mysql
    environment:
      - MYSQL_ROOT_PASSWORD=example
    logging:
      driver: gelf
      options:
        gelf-address: udp://127.0.0.1:12201
        tag: "mysql"

  cache-api:
    container_name: cache-api
    image: redis:4.0.11
    # ports:
    #   - 6379:6379
    #   - 63791:6379
    # expose:
    #   - 63791
    volumes:
      - ./data/cache-api:/data
    logging:
      driver: "json-file"
      options:
        max-file: "5"
        max-size: "10m"

  cache-consumer:
    container_name: cache-concumer
    image: redis:4.0.11
    # ports:
    #   - 6379:6379
    #   - 63792:6379
    # expose:
    #   - 63792
    volumes:
      - ./data/cache-consumer:/data
    logging:
      driver: "json-file"
      options:
        max-file: "5"
        max-size: "10m"

  cache-provider:
    container_name: cache-provider
    image: redis:4.0.11
    volumes:
      - ./data/cache-provider:/data
    logging:
      driver: "json-file"
      options:
        max-file: "5"
        max-size: "10m"

  graphql:
    container_name: graphql
    restart: always
    build:
      context: ./client
      dockerfile: Dockerfile
    environment:
      - NODE_ENV=production
      - SERVER_PROTOCOL=http
      - SERVER_HOST=loclhost
      - SERVER_PORT=3000
      - API_PROTOCOL=http
      - API_HOST=api
      - API_PORT=80
      - IMAGE_SERVER=http://loggjafarthing.einarvalur.co:8000
      - FORWARDER_SERVER=http://loggjafarthing.einarvalur.co:8008
      #- ASSETS_SERVER=http://static-server
    volumes:
      - ./client/@types:/usr/src/app/@types
      - ./client/src:/usr/src/app/src
    ports:
      - 3000:3000
    expose:
      - 3000
    depends_on:
      - api
      - forwarder
    links:
      - api
    command: bash -c "npm start"
    logging:
      driver: gelf
      options:
        gelf-address: udp://127.0.0.1:12201
        tag: "graphql"

  aggregator:
    container_name: aggregator
    build:
      args:
        - WITH_DEV=false
        - WITH_XDEBUG=false
      context: ./aggregator
      dockerfile: Dockerfile
    volumes:
      - ./aggregator/auto/:/usr/src/auto
      - ./aggregator/config/:/usr/src/config
      - ./aggregator/module/:/usr/src/module
      - ./aggregator/public/:/usr/src/public
    environment:
      - AGGREGATOR_CONSUMER_SCHEMA=http
      - AGGREGATOR_CONSUMER_HOST=api
      - AGGREGATOR_CONSUMER_PORT=80

      - PROVIDER_CACHE_TYPE=memory # memory | file | none
      - PROVIDER_CACHE=true # true | false
      - PROVIDER_CACHE_HOST=cache-provider
      - PROVIDER_CACHE_PORT=6379

      - CONSUMER_CACHE_TYPE=memory # memory | file | none
      - CONSUMER_CACHE=true # true # true | false
      - CONSUMER_CACHE_HOST=cache-consumer
      - CONSUMER_CACHE_PORT=6379

      - LOG_PATH=php://stdout
    depends_on:
      - api
      - cache-consumer
      - cache-provider
    links:
      - api
      - cache-consumer
      - cache-provider
    working_dir: /usr/src/auto
    logging:
      driver: gelf
      options:
        gelf-address: udp://127.0.0.1:12201
        tag: "aggregator"

  image-server:
    container_name: images
    image: minimalcompact/thumbor:6.7.0
    ports:
      - 8000:80
    environment:
      - DETECTORS=['thumbor.detectors.face_detector','thumbor.detectors.feature_detector']
      - THUMBOR_NUM_PROCESSES=3
      - AUTO_WEBP=True
    volumes:
      - ./data/thumbor:/data
    logging:
      driver: "json-file"
      options:
        max-file: "5"
        max-size: "10m"

  kibana:
    container_name: kibana
    image: kibana:7.4.0
    links:
      - elasticsearch
    ports:
      - '5601:5601'
    logging:
      driver: "json-file"
      options:
        max-file: "5"
        max-size: "10m"

  logstash:
    container_name: logstash
    build:
      context: ./log-server
      dockerfile: Dockerfile
    environment:
      LS_JAVA_OPTS: "-Xmx256m -Xms256m"
    ports:
      - "12201:12201/udp"
    links:
      - elasticsearch
    depends_on:
      - kibana
      - elasticsearch
    volumes:
      - ./log-server/pipeline:/usr/share/logstash/pipeline
      - ./log-server/logs:/usr/share/logstash/logs
      - ./log-server/patterns:/etc/logstash/conf.d/patterns
    logging:
      driver: "json-file"
      options:
        max-file: "5"
        max-size: "10m"

  elasticsearch:
    container_name: elasticsearch
    image: docker.elastic.co/elasticsearch/elasticsearch:7.4.0
    volumes:
      - ./data/search-logging/:/usr/share/elasticsearch/data
    environment:
      - discovery.type=single-node
      # - node.name=elasticsearch
      # - cluster.initial_master_nodes=elasticsearch
      # - cluster.name=docker-cluster
      # - bootstrap.memory_lock=true
      # - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ports:
      - 9201:9200
      - 9301:9300
    ulimits:
      memlock:
        soft: -1
        hard: -1
    logging:
      driver: "json-file"
      options:
        max-file: "5"
        max-size: "10m"

  acc-database:
    container_name: accumulator-database
    image: mongo:4.2.0-bionic
    command: [--auth]
    ports:
      - 27017:27017
    environment:
      - STORE_USER=${ENV_STORE_USER:-wo}
      - STORE_PASSWORD=${ENV_STORE_PASSWORD:-long@pass!123}
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=hundurhundur
    volumes:
      - ./data/acc-mongo:/data/db
      - ./assets:/home
      - ./accumulator/config/mongo:/docker-entrypoint-initdb.d
    logging:
      driver: "json-file"
      options:
        max-file: "5"
        max-size: "10m"

  accumulator:
    container_name: accumulator
    build:
      context: ./accumulator
      dockerfile: Dockerfile
    environment:
      - STORE_HOST=acc-database
      - STORE_DB=althingi
      - STORE_PORT=27017
      - STORE_USER=wo
      - STORE_PASSWORD=long@pass!123
      - QUEUE_HOST=queue
      - QUEUE_USER=admin
      - QUEUE_PASSWORD=Admin@123
      - API_HOST=api
      - API_PORT=80
      - SEARCH_PROTOCOL=http
      - SEARCH_HOST=search-api
      - SEARCH_PORT=9200
    restart: on-failure
    volumes:
      - ./accumulator/src:/usr/src/app/src
      - ./accumulator/@types:/usr/src/app/@types
    depends_on:
      - acc-database
      - queue
      - search-api
    links:
      - acc-database
      - queue
      - search-api
    command: bash -c "./wait-for-it.sh queue:5672 -t 80 -- echo \"RabbitMQ up\" && npm run tsc && ./node_modules/.bin/forever ./dist/index.js"
    logging:
      driver: gelf
      options:
        gelf-address: udp://127.0.0.1:12201
        tag: "accumulator"

  queue:
    container_name: queue
    image: rabbitmq:3.7.19-management-alpine
    hostname: rabbit1
    environment:
      - RABBITMQ_ERLANG_COOKIE="jasdfg87asdv8cxv6DUv"
      - RABBITMQ_NODENAME=rabbit1
      - RABBITMQ_DEFAULT_USER=admin
      - RABBITMQ_DEFAULT_PASS=Admin@123
    ports:
      # - 4369:4369
      # - 5671:5671
      - 5672:5672
      # - 15671:15671
      - 15672:15672
      # - 25672:25672
    volumes:
      - ./accumulator/config/rabbitmq/definitions.json:/etc/rabbitmq/definitions.json
    logging:
      driver: "json-file"
      options:
        max-file: "5"
        max-size: "10m"

  forwarder:
    container_name: forwarder
    build:
      context: ./forwarder
      dockerfile: Dockerfile
    ports:
      - 8008:8008
    logging:
      driver: gelf
      options:
        gelf-address: udp://127.0.0.1:12201
        tag: "forwarder"