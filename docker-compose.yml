version: '3.4'

services:

  master:
    container_name: master
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - 80:80
    expose:
      - 80
    volumes:
      - ./static:/usr/local/apache2/htdocs
      - ./logs:/var/logs
    depends_on:
      - graphql
      - image-server
      - logstash
    links:
      - graphql
    logging:
      driver: gelf
      options:
        gelf-address: udp://127.0.0.1:12201
        tag: "apache"

  api:
    container_name: api
    build:
      context: ./server
      dockerfile: Dockerfile
    volumes:
      - ./logs/:/var/www/data/log
      - ./server/auto/:/var/www/auto
      - ./server/config/:/var/www/config
      - ./server/module/:/var/www/module
      - ./server/public/:/var/www/public
    depends_on:
      - database
      # - search-api
      - cache-api
      - queue
      - accumulator
      # - indexer
      - acc-database
    links:
      - database
      # - search-api
      - cache-api
      - queue
      - accumulator
      # - indexer
      - acc-database
    ports:
      - 8080:80
    expose:
      - 8080
    environment:
      - DB_HOST=database
      - DB_PORT=3306
      - DB_NAME=althingi
      - DB_USER=root
      - DB_PASSWORD=example

      - CACHE_HOST=cache-api
      - CACHE_PORT=6379
      # - CACHE_TYPE=none
      - CACHE_TYPE=memory

      # - SEARCH=elasticsearch
      - SEARCH=none

      - ES_HOST=search-api
      - ES_PROTO=http
      - ES_PORT=9200
      - ES_USER=elastic
      - ES_PASSWORD=changeme

      # - LOG_PATH=/var/www/data/log/api.log
      - LOG_PATH=php://stdout
      - LOG_FORMAT=line

      - QUEUE=RabbitMQ
      # - QUEUE=none
      - QUEUE_HOST=queue
      - QUEUE_PORT=5672
      - QUEUE_USER=admin
      - QUEUE_PASSWORD=Admin@123
      - QUEUE_VHOST=/
      - QUEUE_FORCED=true

      - STORAGE_HOST=acc-database
      - STORAGE_DB=althingi
      - STORAGE_PORT=27017
      - STORAGE_USER=ro
      - STORAGE_PASSWORD=long@pass!123
    logging:
      driver: gelf
      options:
        gelf-address: udp://127.0.0.1:12201
        tag: "api"

  search-api:
    container_name: search-api
    image: docker.elastic.co/elasticsearch/elasticsearch:7.0.0
    environment:
      - discovery.type=single-node
    ports:
      - 9200:9200
      - 9300:9300
    volumes:
      - ./data/search-api/:/usr/share/elasticsearch/data
    logging:
      driver: "json-file"
      options:
        max-file: "5"
        max-size: "10m"

  database:
    container_name: database
    image: mysql:5.6.41
    restart: always
    command: --default-authentication-plugin=mysql_native_password
    ports:
      - 4406:3306
    expose:
      - 4406
    volumes:
      - ./data/mysql:/var/lib/mysql
      - ./server/auto/db/:/docker-entrypoint-initdb.d
      - ./server/assets/database/:/home
      - ./assets/database:/etc/mysql/conf.d
      - ./logs/:/var/log/mysql
    environment:
      - MYSQL_ROOT_PASSWORD=example
    logging:
      driver: gelf
      options:
        gelf-address: udp://127.0.0.1:12201
        tag: "mysql"

  cache-api:
    container_name: cache-api
    image: redis:4.0.11
    # ports:
    #   - 6379:6379
    #   - 63791:6379
    # expose:
    #   - 63791
    volumes:
      - ./data/cache-api:/data
    logging:
      driver: "json-file"
      options:
        max-file: "5"
        max-size: "10m"

  cache-consumer:
    container_name: cache-concumer
    image: redis:4.0.11
    # ports:
    #   - 6379:6379
    #   - 63792:6379
    # expose:
    #   - 63792
    volumes:
      - ./data/cache-consumer:/data
    logging:
      driver: "json-file"
      options:
        max-file: "5"
        max-size: "10m"

  cache-provider:
    container_name: cache-provider
    image: redis:4.0.11
    volumes:
      - ./data/cache-provider:/data
    logging:
      driver: "json-file"
      options:
        max-file: "5"
        max-size: "10m"

  graphql:
    container_name: graphql
    restart: always
    build:
      context: ./client
      dockerfile: Dockerfile
      args:
        - GRAPHQL_SERVER=/graphql
    environment:
      - CLIENT_HOST=api
      - CLIENT_PORT=80
      - IMAGE_SERVER=/images
    volumes:
      - ./logs/:/home/node/app/logs
    ports:
      - 3000:3000
    expose:
      - 3000
    depends_on:
      - api
    links:
      - api
    logging:
      driver: gelf
      options:
        gelf-address: udp://127.0.0.1:12201
        tag: "graphql"

  aggregator:
    container_name: aggregator
    build:
      context: ./aggregator
      dockerfile: Dockerfile
    volumes:
      - ./aggregator/auto/:/usr/src/auto
      - ./aggregator/config/:/usr/src/config
      - ./aggregator/module/:/usr/src/module
      - ./aggregator/public/:/usr/src/public
      - ./logs/:/usr/src/data/log/
    environment:
      - AGGREGATOR_CONSUMER=http://api:80

      - PROVIDER_CACHE_TYPE=memory # memory | file | none
      - PROVIDER_CACHE=true # true | false
      - PROVIDER_CACHE_HOST=cache-provider
      - PROVIDER_CACHE_PORT=6379

      - CONSUMER_CACHE_TYPE=memory # memory | file | none
      # - CONSUMER_CACHE_TYPE=none
      - CONSUMER_CACHE=true # true # true | false
      - CONSUMER_CACHE_HOST=cache-consumer
      - CONSUMER_CACHE_PORT=6379

      # - LOG_PATH=/usr/src/data/log/aggregator.log
      - LOG_PATH=php://stdout
      - LOG_FORMAT=line
    depends_on:
      - api
      - cache-consumer
      - cache-provider
    links:
      - api
      - cache-consumer
      - cache-provider
    logging:
      driver: gelf
      options:
        gelf-address: udp://127.0.0.1:12201
        tag: "aggregator"

  image-server:
    container_name: images
    image: minimalcompact/thumbor:6.7.0
    ports:
      - 8000:80
    environment:
      - DETECTORS=['thumbor.detectors.face_detector','thumbor.detectors.feature_detector']
      - THUMBOR_NUM_PROCESSES=3
      - AUTO_WEBP=True
    volumes:
      - ./data/thumbor:/data
    logging:
      driver: "json-file"
      options:
        max-file: "5"
        max-size: "10m"

  kibana:
    container_name: kibana
    image: kibana:7.0.0
    links:
      - elasticsearch
    ports:
      - '5601:5601'
    logging:
      driver: "json-file"
      options:
        max-file: "5"
        max-size: "10m"

  logstash:
    container_name: logstash
    build:
      context: ./log-server
      dockerfile: Dockerfile
    ports:
      - "127.0.0.1:12201:12201/udp"
    links:
      - elasticsearch
    depends_on:
      - kibana
      - elasticsearch
    logging:
      driver: "json-file"
      options:
        max-file: "5"
        max-size: "10m"

  elasticsearch:
    container_name: elasticsearch
    image: docker.elastic.co/elasticsearch/elasticsearch:7.0.0
    volumes:
      - ./data/search-logging/:/usr/share/elasticsearch/data
    environment:
      - discovery.type=single-node
      # - node.name=elasticsearch
      # - cluster.initial_master_nodes=elasticsearch
      # - cluster.name=docker-cluster
      # - bootstrap.memory_lock=true
      # - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    logging:
      driver: "json-file"
      options:
        max-file: "5"
        max-size: "10m"

  acc-database:
    container_name: accumulator-database
    image: mongo:4.0.10
    command: [--auth]
    ports:
      - 27017:27017
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=hundurhundur
    volumes:
      - ./data/acc-mongo:/data/db
      - ./assets:/home
      - ./assets/acc-database:/docker-entrypoint-initdb.d
    logging:
      driver: "json-file"
      options:
        max-file: "5"
        max-size: "10m"

  accumulator:
    container_name: accumulator
    build:
      context: ./accumulator
      dockerfile: Dockerfile
    environment:
      - STORE_HOST=acc-database
      - STORE_DB=althingi
      - STORE_PORT=27017
      - STORE_USER=wo
      - STORE_PASSWORD=long@pass!123
      - QUEUE_HOST=queue
      - QUEUE_USER=admin
      - QUEUE_PASSWORD=Admin@123
      - API_HOST=api
      - API_PORT=80
    restart: on-failure
    volumes:
      - ./accumulator/src:/usr/src/app/src
      - ./accumulator/@types:/usr/src/app/@types
    depends_on:
      - acc-database
      - queue
    links:
      - acc-database
      - queue
    command: bash -c "./wait-for-it.sh queue:5672 -t 80 -- echo \"RabbitMQ up\" && npm run tsc && ./node_modules/.bin/forever ./dist/index.js"
    logging:
      driver: gelf
      options:
        gelf-address: udp://127.0.0.1:12201
        tag: "accumulator"

  indexer:
    container_name: indexer
    build:
      context: ./indexer
      dockerfile: Dockerfile
    environment:
      - SEARCH_HOST=search-api
      - QUEUE_HOST=queue
      - QUEUE_USER=admin
      - QUEUE_PASSWORD=Admin@123
    restart: on-failure
    volumes:
      - ./indexer/src:/usr/src/app/src
      - ./indexer/@types:/usr/src/app/@types
    depends_on:
      - search-api
      - queue
    links:
      - search-api
      - queue
    command: bash -c "./wait-for-it.sh queue:5672 -t 80 -- echo \"RabbitMQ up\" && npm run tsc && ./node_modules/.bin/forever ./dist/index.js"
    logging:
      driver: gelf
      options:
        gelf-address: udp://127.0.0.1:12201
        tag: "indexer"

  queue:
    container_name: queue
    image: rabbitmq:3.7.13-rc.2-management
    hostname: rabbit1
    environment:
      - RABBITMQ_ERLANG_COOKIE="jasdfg87asdv8cxv6DUv"
      - RABBITMQ_NODENAME=rabbit1
      - RABBITMQ_DEFAULT_USER=admin
      - RABBITMQ_DEFAULT_PASS=Admin@123
    ports:
      - 4369:4369
      - 5671:5671
      - 5672:5672
      - 15671:15671
      - 15672:15672
      - 25672:25672
    volumes:
      - ./assets/queue/definitions.json:/etc/rabbitmq/definitions.json
    logging:
      driver: "json-file"
      options:
        max-file: "5"
        max-size: "10m"


  ## Setup with a MySQL master (read/write) and a slave (read-only)
  # database:
  #   image: mysql:5.6.41
  #   restart: always
  #   command: --default-authentication-plugin=mysql_native_password
  #   environment:
  #     - MYSQL_ROOT_PASSWORD=example
  #   depends_on:
  #     - mysqlslave
  #   ports:
  #     - 4406:3306
  #   expose:
  #     - 4406
  #   volumes:
  #     - ./data/mysql-master:/var/lib/mysql/
  #     - ./assets/database-master:/etc/mysql/conf.d
  #     - ./logs/:/var/log/mysql
  #     - ./server/assets/database/:/home
  #     - ./server/auto/db/:/docker-entrypoint-initdb.d
  # mysqlslave:
  #   image: mysql:5.6.41
  #   environment:
  #     - MYSQL_ROOT_PASSWORD=example
  #   volumes:
  #     - ./data/mysql-slave:/var/lib/mysql/
  #     - ./assets/database-slave:/etc/mysql/conf.d/
  # mysqlconfigure:
  #   image: mysql:5.6.41
  #   environment:
  #     - "MYSQL_SLAVE_PASSWORD=example"
  #     - "MYSQL_MASTER_PASSWORD=example"
  #     - "MYSQL_ROOT_PASSWORD=example"
  #     - "MYSQL_REPLICATION_USER=repl"
  #     - "MYSQL_REPLICATION_PASSWORD=repl"
  #   volumes:
  #     - ./assets/database/mysql_connector.sh:/tmp/mysql_connector.sh
  #   command: /bin/bash -x /tmp/mysql_connector.sh

